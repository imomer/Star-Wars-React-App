{"ast":null,"code":"var _jsxFileName = \"/Users/OmerHussain/Desktop/star-wars/src/App.js\";\nimport React, { Component } from 'react';\nimport StarWarsLogo from \"./images/Star_Wars_Logo.svg\";\nimport Loading from \"./images/loading.svg\";\nimport './style.css';\n\nclass App extends Component {\n  /**\n   * Constructor\n   */\n  constructor() {\n    super();\n    this.state = {\n      btnActive: false,\n      showLoader: false,\n      showQAs: false,\n      longestOpeningCrawlFilm: null,\n      mostAppearedCharacter: null,\n      planetsWithPilots: null,\n      mostAppearedSpecies: null\n    };\n  }\n  /**\n   * Show QAs\n   */\n\n\n  getQAs() {\n    if (this.state.btnActive) {\n      this.setState({\n        btnActive: false,\n        showQAs: false\n      });\n    } else {\n      // Show the loader while fetching data\n      this.setState({\n        btnActive: true,\n        showLoader: true\n      }); // Ajax URLs\n\n      const proxyURL = \"https://cors-anywhere.herokuapp.com/\";\n      const longestOpeningCrawlFilmURL = \"https://prototype-star-wars-api.herokuapp.com/api/longest-opening-crawl-film\";\n      const mostAppearedCharacterURL = \"https://prototype-star-wars-api.herokuapp.com/api/most-appeared-character\";\n      const mostAppearedSpeciesURL = \"https://prototype-star-wars-api.herokuapp.com/api/most-appeared-species\";\n      const planetsWithPilotsURL = \"https://prototype-star-wars-api.herokuapp.com/api/planets-with-pilots\"; // Ajax call for longest opening crawl film\n\n      const call1 = fetch(proxyURL + longestOpeningCrawlFilmURL).then(res => res.json()).then(result => {\n        return result[0];\n      }, error => {\n        this.setState({\n          error\n        });\n      }); // Ajax call for most appeared character\n\n      const call2 = fetch(proxyURL + mostAppearedCharacterURL).then(res => res.json()).then(result => {\n        return result[0];\n      }, error => {\n        this.setState({\n          error\n        });\n      }); // Ajax call for most appeared species\n\n      const call3 = fetch(proxyURL + mostAppearedSpeciesURL).then(res => res.json()).then(result => {\n        return result;\n      }, error => {\n        this.setState({\n          error\n        });\n      }); // Ajax call for planets with pilots\n\n      const call4 = fetch(proxyURL + planetsWithPilotsURL).then(res => res.json()).then(result => {\n        return result;\n      }, error => {\n        this.setState({\n          error\n        });\n      });\n      Promise.all([call1, call2, call3, call4]).then(values => {\n        console.log(values);\n        this.setState({\n          showLoader: false,\n          showQAs: true,\n          longestOpeningCrawlFilm: values[0],\n          mostAppearedCharacter: values[1],\n          planetsWithPilots: values[2],\n          mostAppearedSpecies: values[3]\n        });\n      });\n    }\n  }\n  /**\n   * Render view\n   */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"star-wars-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"app-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: StarWarsLogo,\n      alt: \"Star Wars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"revelation-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.getQAs(),\n      className: this.state.btnActive ? 'active' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-star star\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), \"Do. Or do not. There is no try.\", React.createElement(\"i\", {\n      className: \"fas fa-star star\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }))), this.state.showLoader ? React.createElement(\"div\", {\n      className: \"loading-anim\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: Loading,\n      alt: \"Loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), \"Please wait... While we are searching the stars for answers.\") : null, this.state.showQAs ? React.createElement(\"div\", {\n      className: \"films-qas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"qa-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Which of all StarWars Movies has longest opening crawl?\"), React.createElement(\"article\", {\n      className: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.longestOpeningCrawlFilm.title)), React.createElement(\"div\", {\n      className: \"qa-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"What character (person) appeared in the most of StarWars films?\"), React.createElement(\"article\", {\n      className: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Answer\")), React.createElement(\"div\", {\n      className: \"qa-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"What species appeared in the most number of StarWars films?\"), React.createElement(\"article\", {\n      className: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Answer\")), React.createElement(\"div\", {\n      className: \"qa-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"article\", {\n      className: \"question\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"What planet in StarWars universe provided the largest number of vehicle pilots?\"), React.createElement(\"article\", {\n      className: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Answer\"))) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/OmerHussain/Desktop/star-wars/src/App.js"],"names":["React","Component","App","constructor","state","btnActive","showLoader","showQAs","longestOpeningCrawlFilm","mostAppearedCharacter","planetsWithPilots","mostAppearedSpecies","getQAs","setState","proxyURL","longestOpeningCrawlFilmURL","mostAppearedCharacterURL","mostAppearedSpeciesURL","planetsWithPilotsURL","call1","fetch","then","res","json","result","error","call2","call3","call4","Promise","all","values","console","log","render","StarWarsLogo","Loading","title"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport StarWarsLogo from './images/Star_Wars_Logo.svg';\nimport Loading from './images/loading.svg';\nimport './style.css';\n\nclass App extends Component {\n\n    /**\n     * Constructor\n     */\n    constructor() {\n        super();\n        this.state = {\n            btnActive: false,\n            showLoader: false,\n            showQAs: false,\n            longestOpeningCrawlFilm: null,\n            mostAppearedCharacter: null,\n            planetsWithPilots: null,\n            mostAppearedSpecies: null\n        }\n    }\n\n\n    /**\n     * Show QAs\n     */\n    getQAs() {\n\n        if (this.state.btnActive) {\n\n            this.setState({\n                btnActive: false,\n                showQAs: false,\n            });\n\n        } else {\n\n            // Show the loader while fetching data\n            this.setState({\n                btnActive: true,\n                showLoader: true\n            });\n\n            // Ajax URLs\n            const proxyURL = \"https://cors-anywhere.herokuapp.com/\";\n            const longestOpeningCrawlFilmURL = \"https://prototype-star-wars-api.herokuapp.com/api/longest-opening-crawl-film\";\n            const mostAppearedCharacterURL = \"https://prototype-star-wars-api.herokuapp.com/api/most-appeared-character\";\n            const mostAppearedSpeciesURL = \"https://prototype-star-wars-api.herokuapp.com/api/most-appeared-species\";\n            const planetsWithPilotsURL = \"https://prototype-star-wars-api.herokuapp.com/api/planets-with-pilots\";\n\n            // Ajax call for longest opening crawl film\n            const call1 = fetch(proxyURL + longestOpeningCrawlFilmURL)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        return result[0];\n                    },\n                    (error) => {\n                        this.setState({\n                            error\n                        });\n                    }\n                );\n\n            // Ajax call for most appeared character\n            const call2 = fetch(proxyURL + mostAppearedCharacterURL)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        return result[0];\n                    },\n                    (error) => {\n                        this.setState({\n                            error\n                        });\n                    }\n                );\n\n            // Ajax call for most appeared species\n            const call3 = fetch(proxyURL + mostAppearedSpeciesURL)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        return result;\n                    },\n                    (error) => {\n                        this.setState({\n                            error\n                        });\n                    }\n                );\n\n            // Ajax call for planets with pilots\n            const call4 = fetch(proxyURL + planetsWithPilotsURL)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        return result;\n                    },\n                    (error) => {\n                        this.setState({\n                            error\n                        });\n                    }\n                );\n\n\n            Promise.all([call1,call2, call3, call4]).then(values => {\n                console.log(values);\n                this.setState({\n                    showLoader: false,\n                    showQAs: true,\n                    longestOpeningCrawlFilm: values[0],\n                    mostAppearedCharacter: values[1],\n                    planetsWithPilots: values[2],\n                    mostAppearedSpecies: values[3]\n                });\n            });\n            \n\n        }\n        \n\n    }\n\n    /**\n     * Render view\n     */\n    render() {\n        return (\n            <div className=\"star-wars-app\">\n\n                {/* header begins */}\n                <header className=\"app-header\">\n                    <img src={StarWarsLogo} alt=\"Star Wars\"/>\n                </header>\n                {/* header ends */}\n\n                {/* revelation button begins  */}\n                <div className=\"revelation-btn\">\n                    <button\n                        onClick={() => this.getQAs()}\n                        className={this.state.btnActive ? 'active' : ''}\n                    >\n                        <i className=\"fas fa-star star\"></i>\n                        Do. Or do not. There is no try.\n                        <i className=\"fas fa-star star\"></i>\n                    </button>\n                </div>\n                {/* revelation button ends  */}\n\n                {/* loading animation begins */}\n                {this.state.showLoader ?\n                    <div className=\"loading-anim\">\n                        <img src={Loading} alt=\"Loading\"/><br/>\n                        Please wait... While we are searching the stars for answers.\n                    </div>\n                    : null\n                }\n                {/* loading animation ends */}\n\n                {/* api data display begins */}\n                {this.state.showQAs ?\n                    <div className=\"films-qas\">\n                        <div className=\"qa-item\">\n                            <article className=\"question\">Which of all StarWars Movies has longest opening crawl?\n                            </article>\n                            <article className=\"answer\">{this.state.longestOpeningCrawlFilm.title}</article>\n                        </div>\n                        <div className=\"qa-item\">\n                            <article className=\"question\">What character (person) appeared in the most of StarWars\n                                films?\n                            </article>\n                            <article className=\"answer\">Answer</article>\n                        </div>\n                        <div className=\"qa-item\">\n                            <article className=\"question\">What species appeared in the most number of StarWars films?\n                            </article>\n                            <article className=\"answer\">Answer</article>\n                        </div>\n                        <div className=\"qa-item\">\n                            <article className=\"question\">What planet in StarWars universe provided the largest number\n                                of vehicle pilots?\n                            </article>\n                            <article className=\"answer\">Answer</article>\n                        </div>\n                    </div>\n                    : null\n                }\n                {/* api data display ends */}\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}